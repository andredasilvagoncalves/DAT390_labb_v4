
./Debug/flipflop_irq.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:



void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f872 	bl	200000ec <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <irq_handler>:

static volatile unsigned char count;

void irq_handler(){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	unsigned char x;
	if(EXTI_PR & 0x8)
20000014:	4b0a      	ldr	r3, [pc, #40]	; (20000040 <irq_handler+0x30>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	2208      	movs	r2, #8
2000001a:	4013      	ands	r3, r2
2000001c:	d006      	beq.n	2000002c <irq_handler+0x1c>
		count++;
2000001e:	4b09      	ldr	r3, [pc, #36]	; (20000044 <irq_handler+0x34>)
20000020:	781b      	ldrb	r3, [r3, #0]
20000022:	b2db      	uxtb	r3, r3
20000024:	3301      	adds	r3, #1
20000026:	b2da      	uxtb	r2, r3
20000028:	4b06      	ldr	r3, [pc, #24]	; (20000044 <irq_handler+0x34>)
2000002a:	701a      	strb	r2, [r3, #0]
		
	EXTI_PR |= 8; 			//kvittera avbrottet
2000002c:	4b04      	ldr	r3, [pc, #16]	; (20000040 <irq_handler+0x30>)
2000002e:	681a      	ldr	r2, [r3, #0]
20000030:	4b03      	ldr	r3, [pc, #12]	; (20000040 <irq_handler+0x30>)
20000032:	2108      	movs	r1, #8
20000034:	430a      	orrs	r2, r1
20000036:	601a      	str	r2, [r3, #0]
}
20000038:	46c0      	nop			; (mov r8, r8)
2000003a:	46bd      	mov	sp, r7
2000003c:	bd80      	pop	{r7, pc}
2000003e:	46c0      	nop			; (mov r8, r8)
20000040:	40013c14 	andmi	r3, r1, r4, lsl ip
20000044:	20000108 	andcs	r0, r0, r8, lsl #2

20000048 <init_flipflop>:
		
		default: GPIO_ODR_D_LOW = 0x00; break;
	}
}*/

void init_flipflop(){
20000048:	b580      	push	{r7, lr}
2000004a:	af00      	add	r7, sp, #0
	GPIO_MODER_LOW_D = 0x5555;
2000004c:	4b1a      	ldr	r3, [pc, #104]	; (200000b8 <init_flipflop+0x70>)
2000004e:	4a1b      	ldr	r2, [pc, #108]	; (200000bc <init_flipflop+0x74>)
20000050:	801a      	strh	r2, [r3, #0]
	GPIO_MODER_LOW_E = 0x0000;
20000052:	4b1b      	ldr	r3, [pc, #108]	; (200000c0 <init_flipflop+0x78>)
20000054:	2200      	movs	r2, #0
20000056:	801a      	strh	r2, [r3, #0]
	
	SYSCFG_EXTICR1 &= ~0xF000; 						//PE3 = 4 till avbrottslina EXTI3 
20000058:	4b1a      	ldr	r3, [pc, #104]	; (200000c4 <init_flipflop+0x7c>)
2000005a:	681a      	ldr	r2, [r3, #0]
2000005c:	4b19      	ldr	r3, [pc, #100]	; (200000c4 <init_flipflop+0x7c>)
2000005e:	491a      	ldr	r1, [pc, #104]	; (200000c8 <init_flipflop+0x80>)
20000060:	400a      	ands	r2, r1
20000062:	601a      	str	r2, [r3, #0]
	SYSCFG_EXTICR1 |= 0x4000;
20000064:	4b17      	ldr	r3, [pc, #92]	; (200000c4 <init_flipflop+0x7c>)
20000066:	681a      	ldr	r2, [r3, #0]
20000068:	4b16      	ldr	r3, [pc, #88]	; (200000c4 <init_flipflop+0x7c>)
2000006a:	2180      	movs	r1, #128	; 0x80
2000006c:	01c9      	lsls	r1, r1, #7
2000006e:	430a      	orrs	r2, r1
20000070:	601a      	str	r2, [r3, #0]
	
	EXTI_IMR |= 8; 									//aktivera avbrott EXTI3 : motsvarande bit b3 i registern
20000072:	4b16      	ldr	r3, [pc, #88]	; (200000cc <init_flipflop+0x84>)
20000074:	681a      	ldr	r2, [r3, #0]
20000076:	4b15      	ldr	r3, [pc, #84]	; (200000cc <init_flipflop+0x84>)
20000078:	2108      	movs	r1, #8
2000007a:	430a      	orrs	r2, r1
2000007c:	601a      	str	r2, [r3, #0]
//	EXTI_FTSR &= ~8;								//maskera negativ flank
//	EXTI_RTSR |= 8;									//aktivera positiv flank
	
	EXTI_RTSR &= ~8;								//maskera positiv flank
2000007e:	4b14      	ldr	r3, [pc, #80]	; (200000d0 <init_flipflop+0x88>)
20000080:	681a      	ldr	r2, [r3, #0]
20000082:	4b13      	ldr	r3, [pc, #76]	; (200000d0 <init_flipflop+0x88>)
20000084:	2108      	movs	r1, #8
20000086:	438a      	bics	r2, r1
20000088:	601a      	str	r2, [r3, #0]
	EXTI_FTSR |= 8;									//aktivera negativ flank
2000008a:	4b12      	ldr	r3, [pc, #72]	; (200000d4 <init_flipflop+0x8c>)
2000008c:	681a      	ldr	r2, [r3, #0]
2000008e:	4b11      	ldr	r3, [pc, #68]	; (200000d4 <init_flipflop+0x8c>)
20000090:	2108      	movs	r1, #8
20000092:	430a      	orrs	r2, r1
20000094:	601a      	str	r2, [r3, #0]
	
	SCB_VTOR = 0x2001C000; 							//relokera avbrottsvektorn
20000096:	4b10      	ldr	r3, [pc, #64]	; (200000d8 <init_flipflop+0x90>)
20000098:	4a10      	ldr	r2, [pc, #64]	; (200000dc <init_flipflop+0x94>)
2000009a:	601a      	str	r2, [r3, #0]
	
	*((void (**) (void)) 0x2001C064) = irq_handler; //motsvarar avbrottsnummer 9, vektor offset 0x64
2000009c:	4b10      	ldr	r3, [pc, #64]	; (200000e0 <init_flipflop+0x98>)
2000009e:	4a11      	ldr	r2, [pc, #68]	; (200000e4 <init_flipflop+0x9c>)
200000a0:	601a      	str	r2, [r3, #0]
	
	NVIC_ISER0 |= (1<<9); 							//bit b9 i set-enable register
200000a2:	4b11      	ldr	r3, [pc, #68]	; (200000e8 <init_flipflop+0xa0>)
200000a4:	681a      	ldr	r2, [r3, #0]
200000a6:	4b10      	ldr	r3, [pc, #64]	; (200000e8 <init_flipflop+0xa0>)
200000a8:	2180      	movs	r1, #128	; 0x80
200000aa:	0089      	lsls	r1, r1, #2
200000ac:	430a      	orrs	r2, r1
200000ae:	601a      	str	r2, [r3, #0]
}
200000b0:	46c0      	nop			; (mov r8, r8)
200000b2:	46bd      	mov	sp, r7
200000b4:	bd80      	pop	{r7, pc}
200000b6:	46c0      	nop			; (mov r8, r8)
200000b8:	40020c00 	andmi	r0, r2, r0, lsl #24
200000bc:	00005555 	andeq	r5, r0, r5, asr r5
200000c0:	40021000 	andmi	r1, r2, r0
200000c4:	40013808 	andmi	r3, r1, r8, lsl #16
200000c8:	ffff0fff 			; <UNDEFINED> instruction: 0xffff0fff
200000cc:	40013c00 	andmi	r3, r1, r0, lsl #24
200000d0:	40013c08 	andmi	r3, r1, r8, lsl #24
200000d4:	40013c0c 	andmi	r3, r1, ip, lsl #24
200000d8:	e000ed08 	and	lr, r0, r8, lsl #26
200000dc:	2001c000 	andcs	ip, r1, r0
200000e0:	2001c064 	andcs	ip, r1, r4, rrx
200000e4:	20000011 	andcs	r0, r0, r1, lsl r0
200000e8:	e000e100 	and	lr, r0, r0, lsl #2

200000ec <main>:

void main(void)
{
200000ec:	b580      	push	{r7, lr}
200000ee:	af00      	add	r7, sp, #0
	init_flipflop();
200000f0:	f7ff ffaa 	bl	20000048 <init_flipflop>
	while(1){
//		out7seg(count);
		GPIO_ODR_D_LOW = count;
200000f4:	4a02      	ldr	r2, [pc, #8]	; (20000100 <main+0x14>)
200000f6:	4b03      	ldr	r3, [pc, #12]	; (20000104 <main+0x18>)
200000f8:	781b      	ldrb	r3, [r3, #0]
200000fa:	b2db      	uxtb	r3, r3
200000fc:	7013      	strb	r3, [r2, #0]
200000fe:	e7f9      	b.n	200000f4 <main+0x8>
20000100:	40020c14 	andmi	r0, r2, r4, lsl ip
20000104:	20000108 	andcs	r0, r0, r8, lsl #2

20000108 <count>:
20000108:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000091 	muleq	r0, r1, r0
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	0001060c 	andeq	r0, r1, ip, lsl #12
  14:	0000cd00 	andeq	ip, r0, r0, lsl #26
	...
  24:	08010200 	stmdaeq	r1, {r9}
  28:	00000016 	andeq	r0, r0, r6, lsl r0
  2c:	00002503 	andeq	r2, r0, r3, lsl #10
  30:	01000400 	tsteq	r0, r0, lsl #8
  34:	15010000 	strne	r0, [r1, #-0]
  38:	0000002c 	andeq	r0, r0, ip, lsr #32
  3c:	01080305 	tsteq	r8, r5, lsl #6
  40:	bc052000 	stclt	0, cr2, [r5], {-0}
  44:	01000000 	mrseq	r0, (UNDEF: 0)
  48:	0000ec4b 	andeq	lr, r0, fp, asr #24
  4c:	00001c20 	andeq	r1, r0, r0, lsr #24
  50:	069c0100 	ldreq	r0, [ip], r0, lsl #2
  54:	00000008 	andeq	r0, r0, r8
  58:	00483601 	subeq	r3, r8, r1, lsl #12
  5c:	00a42000 	adceq	r2, r4, r0
  60:	9c010000 	stcls	0, cr0, [r1], {-0}
  64:	0000c107 	andeq	ip, r0, r7, lsl #2
  68:	10170100 	andsne	r0, r7, r0, lsl #2
  6c:	38200000 	stmdacc	r0!, {}	; <UNPREDICTABLE>
  70:	01000000 	mrseq	r0, (UNDEF: 0)
  74:	0000839c 	muleq	r0, ip, r3
  78:	00780800 	rsbseq	r0, r8, r0, lsl #16
  7c:	00251801 	eoreq	r1, r5, r1, lsl #16
  80:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  84:	00000000 	andeq	r0, r0, r0
  88:	00000b01 	andeq	r0, r0, r1, lsl #22
  8c:	000c2000 	andeq	r2, ip, r0
  90:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	0e030b3e 	vmoveq.16	d3[0], r0
  1c:	35030000 	strcc	r0, [r3, #-0]
  20:	00134900 	andseq	r4, r3, r0, lsl #18
  24:	00340400 	eorseq	r0, r4, r0, lsl #8
  28:	0b3a0e03 	bleq	e8383c <startup-0x1f17c7c4>
  2c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  30:	00001802 	andeq	r1, r0, r2, lsl #16
  34:	3f002e05 	svccc	0x00002e05
  38:	3a0e0319 	bcc	380ca4 <startup-0x1fc7f35c>
  3c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  40:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  44:	96184006 	ldrls	r4, [r8], -r6
  48:	00001942 	andeq	r1, r0, r2, asr #18
  4c:	3f002e06 	svccc	0x00002e06
  50:	3a0e0319 	bcc	380cbc <startup-0x1fc7f344>
  54:	110b3b0b 	tstne	fp, fp, lsl #22
  58:	40061201 	andmi	r1, r6, r1, lsl #4
  5c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  60:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
  64:	03193f01 	tsteq	r9, #1, 30
  68:	3b0b3a0e 	blcc	2ce8a8 <startup-0x1fd31758>
  6c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
  70:	97184006 	ldrls	r4, [r8, -r6]
  74:	13011942 	movwne	r1, #6466	; 0x1942
  78:	34080000 	strcc	r0, [r8], #-0
  7c:	3a080300 	bcc	200c84 <startup-0x1fdff37c>
  80:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  84:	09000013 	stmdbeq	r0, {r0, r1, r4}
  88:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  8c:	0b3a0e03 	bleq	e838a0 <startup-0x1f17c760>
  90:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  94:	06120111 			; <UNDEFINED> instruction: 0x06120111
  98:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  9c:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000000f8 	strdeq	r0, [r0], -r8
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000108 	andcs	r0, r0, r8, lsl #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000093 	muleq	r0, r3, r0
   4:	00530002 	subseq	r0, r3, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	72646e41 	rsbvc	r6, r4, #1040	; 0x410
  28:	65442f65 	strbvs	r2, [r4, #-3941]	; 0xfffff09b
  2c:	6f746b73 	svcvs	0x00746b73
  30:	41442f70 	hvcmi	17136	; 0x42f0
  34:	30393354 	eorscc	r3, r9, r4, asr r3
  38:	62616c5f 	rsbvs	r6, r1, #24320	; 0x5f00
  3c:	34765f62 	ldrbtcc	r5, [r6], #-3938	; 0xfffff09e
  40:	696c662f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r9, sl, sp, lr}^
  44:	6f6c6670 	svcvs	0x006c6670
  48:	72695f70 	rsbvc	r5, r9, #112, 30	; 0x1c0
  4c:	73000071 	movwvc	r0, #113	; 0x71
  50:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  54:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  58:	00000100 	andeq	r0, r0, r0, lsl #2
  5c:	02050000 	andeq	r0, r5, #0
  60:	20000000 	andcs	r0, r0, r0
  64:	13010b03 	movwne	r0, #6915	; 0x1b03
  68:	0003025e 	andeq	r0, r3, lr, asr r2
  6c:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  70:	00001002 	andeq	r1, r0, r2
  74:	01160320 	tsteq	r6, r0, lsr #6
  78:	67765930 			; <UNDEFINED> instruction: 0x67765930
  7c:	2f821903 	svccs	0x00821903
  80:	76673e3d 			; <UNDEFINED> instruction: 0x76673e3d
  84:	3e68676a 	cdpcc	7, 6, cr6, cr8, cr10, {3}
  88:	cb08753e 	blgt	21d588 <startup-0x1fde2a78>
  8c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  90:	0a023101 	beq	8c49c <startup-0x1ff73b64>
  94:	Address 0x00000094 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
   4:	00707574 	rsbseq	r7, r0, r4, ror r5
   8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
   c:	696c665f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
  10:	6f6c6670 	svcvs	0x006c6670
  14:	6e750070 	mrcvs	0, 3, r0, cr5, cr0, {3}
  18:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  1c:	63206465 			; <UNDEFINED> instruction: 0x63206465
  20:	00726168 	rsbseq	r6, r2, r8, ror #2
  24:	20554e47 	subscs	r4, r5, r7, asr #28
  28:	20393943 	eorscs	r3, r9, r3, asr #18
  2c:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
  30:	30322031 	eorscc	r2, r2, r1, lsr r0
  34:	39303731 	ldmdbcc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
  38:	28203430 	stmdacs	r0!, {r4, r5, sl, ip, sp}
  3c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  40:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  44:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  48:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  4c:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  50:	372d6465 	strcc	r6, [sp, -r5, ror #8]!
  54:	6172622d 	cmnvs	r2, sp, lsr #4
  58:	2068636e 	rsbcs	r6, r8, lr, ror #6
  5c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  60:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  64:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
  68:	5d343032 	ldcpl	0, cr3, [r4, #-200]!	; 0xffffff38
  6c:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  70:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  74:	616d2d20 	cmnvs	sp, r0, lsr #26
  78:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  7c:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  80:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  84:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  88:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  8c:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  90:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  94:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  98:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  9c:	616d2d20 	cmnvs	sp, r0, lsr #26
  a0:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  a4:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  a8:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  ac:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  b0:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  b4:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  b8:	00393963 	eorseq	r3, r9, r3, ror #18
  bc:	6e69616d 	powvsez	f6, f1, #5.0
  c0:	71726900 	cmnvc	r2, r0, lsl #18
  c4:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
  c8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
  cc:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
  d0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  d4:	6e415c73 	mcrvs	12, 2, r5, cr1, cr3, {3}
  d8:	5c657264 	sfmpl	f7, 2, [r5], #-400	; 0xfffffe70
  dc:	6b736544 	blvs	1cd95f4 <startup-0x1e326a0c>
  e0:	5c706f74 	ldclpl	15, cr6, [r0], #-464	; 0xfffffe30
  e4:	33544144 	cmpcc	r4, #68, 2
  e8:	6c5f3039 	mrrcvs	0, 3, r3, pc, cr9	; <UNPREDICTABLE>
  ec:	5f626261 	svcpl	0x00626261
  f0:	665c3476 			; <UNDEFINED> instruction: 0x665c3476
  f4:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
  f8:	5f706f6c 	svcpl	0x00706f6c
  fc:	00717269 	rsbseq	r7, r1, r9, ror #4
 100:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 104:	3a430074 	bcc	10c02dc <startup-0x1ef3fd24>
 108:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 10c:	412f7372 			; <UNDEFINED> instruction: 0x412f7372
 110:	6572646e 	ldrbvs	r6, [r2, #-1134]!	; 0xfffffb92
 114:	7365442f 	cmnvc	r5, #788529152	; 0x2f000000
 118:	706f746b 	rsbvc	r7, pc, fp, ror #8
 11c:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
 120:	5f303933 	svcpl	0x00303933
 124:	6262616c 	rsbvs	r6, r2, #108, 2
 128:	2f34765f 	svccs	0x0034765f
 12c:	70696c66 	rsbvc	r6, r9, r6, ror #24
 130:	706f6c66 	rsbvc	r6, pc, r6, ror #24
 134:	7172695f 	cmnvc	r2, pc, asr r9
 138:	6174732f 	cmnvs	r4, pc, lsr #6
 13c:	70757472 	rsbsvc	r7, r5, r2, ror r4
 140:	Address 0x00000140 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <count+0xdffff206>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000038 	andeq	r0, r0, r8, lsr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000048 	andcs	r0, r0, r8, asr #32
  48:	000000a4 	andeq	r0, r0, r4, lsr #1
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	200000ec 	andcs	r0, r0, ip, ror #1
  64:	0000001c 	andeq	r0, r0, ip, lsl r0
  68:	40080e41 	andmi	r0, r8, r1, asr #28
  6c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  70:	070d4101 	streq	r4, [sp, -r1, lsl #2]
