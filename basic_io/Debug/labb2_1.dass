
./Debug/labb2_1.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#include "startup.h"

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f910 	bl	20000228 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:
 

#include "startup.h"

void app_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
#ifdef USBDM
	*((unsigned long *) 0x40023830) = 0x18; //starta clockor port E, D
20000014:	4b0d      	ldr	r3, [pc, #52]	; (2000004c <app_init+0x3c>)
20000016:	2218      	movs	r2, #24
20000018:	601a      	str	r2, [r3, #0]
	//__asm volatile ( " LDR R0,=0x8000209\n BLX R0 \n //initiera PLL");
#endif

	GPIO_MODER_D &= 0;
2000001a:	4b0d      	ldr	r3, [pc, #52]	; (20000050 <app_init+0x40>)
2000001c:	681b      	ldr	r3, [r3, #0]
2000001e:	4b0c      	ldr	r3, [pc, #48]	; (20000050 <app_init+0x40>)
20000020:	2200      	movs	r2, #0
20000022:	601a      	str	r2, [r3, #0]
	GPIO_MODER_D |= 0x55005555; //pin 1 - 8 display, pin 9 - 15 keyboard ( b0 - b3 input, b4 - b7 output) 
20000024:	4b0a      	ldr	r3, [pc, #40]	; (20000050 <app_init+0x40>)
20000026:	681a      	ldr	r2, [r3, #0]
20000028:	4b09      	ldr	r3, [pc, #36]	; (20000050 <app_init+0x40>)
2000002a:	490a      	ldr	r1, [pc, #40]	; (20000054 <app_init+0x44>)
2000002c:	430a      	orrs	r2, r1
2000002e:	601a      	str	r2, [r3, #0]
	
	GPIO_OTYPER_D |= 0x0000; //push-pull output type
20000030:	4a09      	ldr	r2, [pc, #36]	; (20000058 <app_init+0x48>)
20000032:	4b09      	ldr	r3, [pc, #36]	; (20000058 <app_init+0x48>)
20000034:	8812      	ldrh	r2, [r2, #0]
20000036:	801a      	strh	r2, [r3, #0]
	
	GPIO_PUPDR_D |= 0x00AA0000; //pull-down input
20000038:	4b08      	ldr	r3, [pc, #32]	; (2000005c <app_init+0x4c>)
2000003a:	681a      	ldr	r2, [r3, #0]
2000003c:	4b07      	ldr	r3, [pc, #28]	; (2000005c <app_init+0x4c>)
2000003e:	21aa      	movs	r1, #170	; 0xaa
20000040:	0409      	lsls	r1, r1, #16
20000042:	430a      	orrs	r2, r1
20000044:	601a      	str	r2, [r3, #0]
}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	46bd      	mov	sp, r7
2000004a:	bd80      	pop	{r7, pc}
2000004c:	40023830 	andmi	r3, r2, r0, lsr r8
20000050:	40020c00 	andmi	r0, r2, r0, lsl #24
20000054:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000058:	40020c04 	andmi	r0, r2, r4, lsl #24
2000005c:	40020c0c 	andmi	r0, r2, ip, lsl #24

20000060 <out7seg>:

void out7seg (unsigned char c){
20000060:	b580      	push	{r7, lr}
20000062:	b082      	sub	sp, #8
20000064:	af00      	add	r7, sp, #0
20000066:	0002      	movs	r2, r0
20000068:	1dfb      	adds	r3, r7, #7
2000006a:	701a      	strb	r2, [r3, #0]
	switch(c){
2000006c:	1dfb      	adds	r3, r7, #7
2000006e:	781b      	ldrb	r3, [r3, #0]
20000070:	2b0f      	cmp	r3, #15
20000072:	d844      	bhi.n	200000fe <out7seg+0x9e>
20000074:	009a      	lsls	r2, r3, #2
20000076:	4b26      	ldr	r3, [pc, #152]	; (20000110 <out7seg+0xb0>)
20000078:	18d3      	adds	r3, r2, r3
2000007a:	681b      	ldr	r3, [r3, #0]
2000007c:	469f      	mov	pc, r3
		case 0: GPIO_ODR_D_LOW = 0x3F; break;
2000007e:	4b25      	ldr	r3, [pc, #148]	; (20000114 <out7seg+0xb4>)
20000080:	223f      	movs	r2, #63	; 0x3f
20000082:	701a      	strb	r2, [r3, #0]
20000084:	e03f      	b.n	20000106 <out7seg+0xa6>
		case 1: GPIO_ODR_D_LOW = 0x06; break;
20000086:	4b23      	ldr	r3, [pc, #140]	; (20000114 <out7seg+0xb4>)
20000088:	2206      	movs	r2, #6
2000008a:	701a      	strb	r2, [r3, #0]
2000008c:	e03b      	b.n	20000106 <out7seg+0xa6>
		case 2: GPIO_ODR_D_LOW = 0x5B; break;
2000008e:	4b21      	ldr	r3, [pc, #132]	; (20000114 <out7seg+0xb4>)
20000090:	225b      	movs	r2, #91	; 0x5b
20000092:	701a      	strb	r2, [r3, #0]
20000094:	e037      	b.n	20000106 <out7seg+0xa6>
		case 3: GPIO_ODR_D_LOW = 0x4F; break;
20000096:	4b1f      	ldr	r3, [pc, #124]	; (20000114 <out7seg+0xb4>)
20000098:	224f      	movs	r2, #79	; 0x4f
2000009a:	701a      	strb	r2, [r3, #0]
2000009c:	e033      	b.n	20000106 <out7seg+0xa6>
		case 4: GPIO_ODR_D_LOW = 0x66; break;
2000009e:	4b1d      	ldr	r3, [pc, #116]	; (20000114 <out7seg+0xb4>)
200000a0:	2266      	movs	r2, #102	; 0x66
200000a2:	701a      	strb	r2, [r3, #0]
200000a4:	e02f      	b.n	20000106 <out7seg+0xa6>
		case 5: GPIO_ODR_D_LOW = 0x6D; break;
200000a6:	4b1b      	ldr	r3, [pc, #108]	; (20000114 <out7seg+0xb4>)
200000a8:	226d      	movs	r2, #109	; 0x6d
200000aa:	701a      	strb	r2, [r3, #0]
200000ac:	e02b      	b.n	20000106 <out7seg+0xa6>
		case 6: GPIO_ODR_D_LOW = 0x7D; break;
200000ae:	4b19      	ldr	r3, [pc, #100]	; (20000114 <out7seg+0xb4>)
200000b0:	227d      	movs	r2, #125	; 0x7d
200000b2:	701a      	strb	r2, [r3, #0]
200000b4:	e027      	b.n	20000106 <out7seg+0xa6>
		case 7: GPIO_ODR_D_LOW = 0x07; break;
200000b6:	4b17      	ldr	r3, [pc, #92]	; (20000114 <out7seg+0xb4>)
200000b8:	2207      	movs	r2, #7
200000ba:	701a      	strb	r2, [r3, #0]
200000bc:	e023      	b.n	20000106 <out7seg+0xa6>
		case 8: GPIO_ODR_D_LOW = 0x7F; break;
200000be:	4b15      	ldr	r3, [pc, #84]	; (20000114 <out7seg+0xb4>)
200000c0:	227f      	movs	r2, #127	; 0x7f
200000c2:	701a      	strb	r2, [r3, #0]
200000c4:	e01f      	b.n	20000106 <out7seg+0xa6>
		case 9: GPIO_ODR_D_LOW = 0x6F; break;
200000c6:	4b13      	ldr	r3, [pc, #76]	; (20000114 <out7seg+0xb4>)
200000c8:	226f      	movs	r2, #111	; 0x6f
200000ca:	701a      	strb	r2, [r3, #0]
200000cc:	e01b      	b.n	20000106 <out7seg+0xa6>
		case 0xA: GPIO_ODR_D_LOW = 0x77; break;
200000ce:	4b11      	ldr	r3, [pc, #68]	; (20000114 <out7seg+0xb4>)
200000d0:	2277      	movs	r2, #119	; 0x77
200000d2:	701a      	strb	r2, [r3, #0]
200000d4:	e017      	b.n	20000106 <out7seg+0xa6>
		case 0xB: GPIO_ODR_D_LOW = 0x7C; break;
200000d6:	4b0f      	ldr	r3, [pc, #60]	; (20000114 <out7seg+0xb4>)
200000d8:	227c      	movs	r2, #124	; 0x7c
200000da:	701a      	strb	r2, [r3, #0]
200000dc:	e013      	b.n	20000106 <out7seg+0xa6>
		case 0xC: GPIO_ODR_D_LOW = 0x39; break;
200000de:	4b0d      	ldr	r3, [pc, #52]	; (20000114 <out7seg+0xb4>)
200000e0:	2239      	movs	r2, #57	; 0x39
200000e2:	701a      	strb	r2, [r3, #0]
200000e4:	e00f      	b.n	20000106 <out7seg+0xa6>
		case 0xD: GPIO_ODR_D_LOW = 0x3F; break;
200000e6:	4b0b      	ldr	r3, [pc, #44]	; (20000114 <out7seg+0xb4>)
200000e8:	223f      	movs	r2, #63	; 0x3f
200000ea:	701a      	strb	r2, [r3, #0]
200000ec:	e00b      	b.n	20000106 <out7seg+0xa6>
		case 0xE: GPIO_ODR_D_LOW = 0x79; break;
200000ee:	4b09      	ldr	r3, [pc, #36]	; (20000114 <out7seg+0xb4>)
200000f0:	2279      	movs	r2, #121	; 0x79
200000f2:	701a      	strb	r2, [r3, #0]
200000f4:	e007      	b.n	20000106 <out7seg+0xa6>
		case 0xF: GPIO_ODR_D_LOW = 0x71; break;
200000f6:	4b07      	ldr	r3, [pc, #28]	; (20000114 <out7seg+0xb4>)
200000f8:	2271      	movs	r2, #113	; 0x71
200000fa:	701a      	strb	r2, [r3, #0]
200000fc:	e003      	b.n	20000106 <out7seg+0xa6>
		
		default: GPIO_ODR_D_LOW = 0x00; break;
200000fe:	4b05      	ldr	r3, [pc, #20]	; (20000114 <out7seg+0xb4>)
20000100:	2200      	movs	r2, #0
20000102:	701a      	strb	r2, [r3, #0]
20000104:	46c0      	nop			; (mov r8, r8)
	}
}
20000106:	46c0      	nop			; (mov r8, r8)
20000108:	46bd      	mov	sp, r7
2000010a:	b002      	add	sp, #8
2000010c:	bd80      	pop	{r7, pc}
2000010e:	46c0      	nop			; (mov r8, r8)
20000110:	20000248 	andcs	r0, r0, r8, asr #4
20000114:	40020c14 	andmi	r0, r2, r4, lsl ip

20000118 <keybActivate>:

void keybActivate(unsigned int row){
20000118:	b580      	push	{r7, lr}
2000011a:	b082      	sub	sp, #8
2000011c:	af00      	add	r7, sp, #0
2000011e:	6078      	str	r0, [r7, #4]
20000120:	687b      	ldr	r3, [r7, #4]
20000122:	2b04      	cmp	r3, #4
20000124:	d819      	bhi.n	2000015a <keybActivate+0x42>
20000126:	687b      	ldr	r3, [r7, #4]
20000128:	009a      	lsls	r2, r3, #2
2000012a:	4b0e      	ldr	r3, [pc, #56]	; (20000164 <keybActivate+0x4c>)
2000012c:	18d3      	adds	r3, r2, r3
2000012e:	681b      	ldr	r3, [r3, #0]
20000130:	469f      	mov	pc, r3
	switch(row){
		case 1: GPIO_ODR_D_HIGH = 0x10; break;//eller GPIO_ODR_D_HIGH = (1<<(row+3));
20000132:	4b0d      	ldr	r3, [pc, #52]	; (20000168 <keybActivate+0x50>)
20000134:	2210      	movs	r2, #16
20000136:	701a      	strb	r2, [r3, #0]
20000138:	e00f      	b.n	2000015a <keybActivate+0x42>
		case 2: GPIO_ODR_D_HIGH = 0x20; break;
2000013a:	4b0b      	ldr	r3, [pc, #44]	; (20000168 <keybActivate+0x50>)
2000013c:	2220      	movs	r2, #32
2000013e:	701a      	strb	r2, [r3, #0]
20000140:	e00b      	b.n	2000015a <keybActivate+0x42>
		case 3: GPIO_ODR_D_HIGH = 0x40; break;
20000142:	4b09      	ldr	r3, [pc, #36]	; (20000168 <keybActivate+0x50>)
20000144:	2240      	movs	r2, #64	; 0x40
20000146:	701a      	strb	r2, [r3, #0]
20000148:	e007      	b.n	2000015a <keybActivate+0x42>
		case 4: GPIO_ODR_D_HIGH = 0x80; break;
2000014a:	4b07      	ldr	r3, [pc, #28]	; (20000168 <keybActivate+0x50>)
2000014c:	2280      	movs	r2, #128	; 0x80
2000014e:	701a      	strb	r2, [r3, #0]
20000150:	e003      	b.n	2000015a <keybActivate+0x42>
		case 0: GPIO_ODR_D_HIGH = 0x00; break;
20000152:	4b05      	ldr	r3, [pc, #20]	; (20000168 <keybActivate+0x50>)
20000154:	2200      	movs	r2, #0
20000156:	701a      	strb	r2, [r3, #0]
20000158:	46c0      	nop			; (mov r8, r8)
	}
}
2000015a:	46c0      	nop			; (mov r8, r8)
2000015c:	46bd      	mov	sp, r7
2000015e:	b002      	add	sp, #8
20000160:	bd80      	pop	{r7, pc}
20000162:	46c0      	nop			; (mov r8, r8)
20000164:	20000288 	andcs	r0, r0, r8, lsl #5
20000168:	40020c15 	andmi	r0, r2, r5, lsl ip

2000016c <keybGetCol>:

int keybGetCol(void){
2000016c:	b580      	push	{r7, lr}
2000016e:	b082      	sub	sp, #8
20000170:	af00      	add	r7, sp, #0
	unsigned char c = GPIO_IDR_D_HIGH;
20000172:	4a12      	ldr	r2, [pc, #72]	; (200001bc <keybGetCol+0x50>)
20000174:	1dfb      	adds	r3, r7, #7
20000176:	7812      	ldrb	r2, [r2, #0]
20000178:	701a      	strb	r2, [r3, #0]
	if(c & 0x8) return 4;
2000017a:	1dfb      	adds	r3, r7, #7
2000017c:	781b      	ldrb	r3, [r3, #0]
2000017e:	2208      	movs	r2, #8
20000180:	4013      	ands	r3, r2
20000182:	d001      	beq.n	20000188 <keybGetCol+0x1c>
20000184:	2304      	movs	r3, #4
20000186:	e015      	b.n	200001b4 <keybGetCol+0x48>
	if(c & 0x4) return 3;
20000188:	1dfb      	adds	r3, r7, #7
2000018a:	781b      	ldrb	r3, [r3, #0]
2000018c:	2204      	movs	r2, #4
2000018e:	4013      	ands	r3, r2
20000190:	d001      	beq.n	20000196 <keybGetCol+0x2a>
20000192:	2303      	movs	r3, #3
20000194:	e00e      	b.n	200001b4 <keybGetCol+0x48>
	if(c & 0x2) return 2;
20000196:	1dfb      	adds	r3, r7, #7
20000198:	781b      	ldrb	r3, [r3, #0]
2000019a:	2202      	movs	r2, #2
2000019c:	4013      	ands	r3, r2
2000019e:	d001      	beq.n	200001a4 <keybGetCol+0x38>
200001a0:	2302      	movs	r3, #2
200001a2:	e007      	b.n	200001b4 <keybGetCol+0x48>
	if(c & 0x1) return 1;
200001a4:	1dfb      	adds	r3, r7, #7
200001a6:	781b      	ldrb	r3, [r3, #0]
200001a8:	2201      	movs	r2, #1
200001aa:	4013      	ands	r3, r2
200001ac:	d001      	beq.n	200001b2 <keybGetCol+0x46>
200001ae:	2301      	movs	r3, #1
200001b0:	e000      	b.n	200001b4 <keybGetCol+0x48>
	return 0;
200001b2:	2300      	movs	r3, #0
}
200001b4:	0018      	movs	r0, r3
200001b6:	46bd      	mov	sp, r7
200001b8:	b002      	add	sp, #8
200001ba:	bd80      	pop	{r7, pc}
200001bc:	40020c11 	andmi	r0, r2, r1, lsl ip

200001c0 <keyb>:

unsigned char keyb(void){
200001c0:	b590      	push	{r4, r7, lr}
200001c2:	b087      	sub	sp, #28
200001c4:	af00      	add	r7, sp, #0
	int row, column;
	unsigned char key[] = {1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
200001c6:	003b      	movs	r3, r7
200001c8:	4a16      	ldr	r2, [pc, #88]	; (20000224 <keyb+0x64>)
200001ca:	ca13      	ldmia	r2!, {r0, r1, r4}
200001cc:	c313      	stmia	r3!, {r0, r1, r4}
200001ce:	6812      	ldr	r2, [r2, #0]
200001d0:	601a      	str	r2, [r3, #0]
	for(row = 1; row <=4; row++){
200001d2:	2301      	movs	r3, #1
200001d4:	617b      	str	r3, [r7, #20]
200001d6:	e019      	b.n	2000020c <keyb+0x4c>
		keybActivate(row);
200001d8:	697b      	ldr	r3, [r7, #20]
200001da:	0018      	movs	r0, r3
200001dc:	f7ff ff9c 	bl	20000118 <keybActivate>
		if( (column = keybGetCol()) )
200001e0:	f7ff ffc4 	bl	2000016c <keybGetCol>
200001e4:	0003      	movs	r3, r0
200001e6:	613b      	str	r3, [r7, #16]
200001e8:	693b      	ldr	r3, [r7, #16]
200001ea:	2b00      	cmp	r3, #0
200001ec:	d00b      	beq.n	20000206 <keyb+0x46>
		{
			keybActivate(0); //To clear the register??
200001ee:	2000      	movs	r0, #0
200001f0:	f7ff ff92 	bl	20000118 <keybActivate>
			return key[4*(row-1) + (column-1)];
200001f4:	697b      	ldr	r3, [r7, #20]
200001f6:	3b01      	subs	r3, #1
200001f8:	009a      	lsls	r2, r3, #2
200001fa:	693b      	ldr	r3, [r7, #16]
200001fc:	3b01      	subs	r3, #1
200001fe:	18d3      	adds	r3, r2, r3
20000200:	003a      	movs	r2, r7
20000202:	5cd3      	ldrb	r3, [r2, r3]
20000204:	e009      	b.n	2000021a <keyb+0x5a>
	for(row = 1; row <=4; row++){
20000206:	697b      	ldr	r3, [r7, #20]
20000208:	3301      	adds	r3, #1
2000020a:	617b      	str	r3, [r7, #20]
2000020c:	697b      	ldr	r3, [r7, #20]
2000020e:	2b04      	cmp	r3, #4
20000210:	dde2      	ble.n	200001d8 <keyb+0x18>
		}
	}
	keybActivate(0);
20000212:	2000      	movs	r0, #0
20000214:	f7ff ff80 	bl	20000118 <keybActivate>
	return 0xFF;
20000218:	23ff      	movs	r3, #255	; 0xff
}
2000021a:	0018      	movs	r0, r3
2000021c:	46bd      	mov	sp, r7
2000021e:	b007      	add	sp, #28
20000220:	bd90      	pop	{r4, r7, pc}
20000222:	46c0      	nop			; (mov r8, r8)
20000224:	2000029c 	mulcs	r0, ip, r2

20000228 <main>:

void main(void)
{
20000228:	b580      	push	{r7, lr}
2000022a:	b082      	sub	sp, #8
2000022c:	af00      	add	r7, sp, #0
	app_init();
2000022e:	f7ff feef 	bl	20000010 <app_init>
	while(1)
	{
		char c = keyb();
20000232:	f7ff ffc5 	bl	200001c0 <keyb>
20000236:	0002      	movs	r2, r0
20000238:	1dfb      	adds	r3, r7, #7
2000023a:	701a      	strb	r2, [r3, #0]
		out7seg (c);
2000023c:	1dfb      	adds	r3, r7, #7
2000023e:	781b      	ldrb	r3, [r3, #0]
20000240:	0018      	movs	r0, r3
20000242:	f7ff ff0d 	bl	20000060 <out7seg>
	{
20000246:	e7f4      	b.n	20000232 <main+0xa>
20000248:	2000007e 	andcs	r0, r0, lr, ror r0
2000024c:	20000086 	andcs	r0, r0, r6, lsl #1
20000250:	2000008e 	andcs	r0, r0, lr, lsl #1
20000254:	20000096 	mulcs	r0, r6, r0
20000258:	2000009e 	mulcs	r0, lr, r0
2000025c:	200000a6 	andcs	r0, r0, r6, lsr #1
20000260:	200000ae 	andcs	r0, r0, lr, lsr #1
20000264:	200000b6 	strhcs	r0, [r0], -r6
20000268:	200000be 	strhcs	r0, [r0], -lr
2000026c:	200000c6 	andcs	r0, r0, r6, asr #1
20000270:	200000ce 	andcs	r0, r0, lr, asr #1
20000274:	200000d6 	ldrdcs	r0, [r0], -r6
20000278:	200000de 	ldrdcs	r0, [r0], -lr
2000027c:	200000e6 	andcs	r0, r0, r6, ror #1
20000280:	200000ee 	andcs	r0, r0, lr, ror #1
20000284:	200000f6 	strdcs	r0, [r0], -r6
20000288:	20000152 	andcs	r0, r0, r2, asr r1
2000028c:	20000132 	andcs	r0, r0, r2, lsr r1
20000290:	2000013a 	andcs	r0, r0, sl, lsr r1
20000294:	20000142 	andcs	r0, r0, r2, asr #2
20000298:	2000014a 	andcs	r0, r0, sl, asr #2
2000029c:	0a030201 	beq	200c0aa8 <main+0xc0880>
200002a0:	0b060504 	bleq	201816b8 <main+0x181490>
200002a4:	0c090807 	stceq	8, cr0, [r9], {7}
200002a8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000278 <main+0x50>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000113 	andeq	r0, r0, r3, lsl r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000054 	andeq	r0, r0, r4, asr r0
  10:	00002e0c 	andeq	r2, r0, ip, lsl #28
  14:	00001200 	andeq	r1, r0, r0, lsl #4
  18:	00001000 	andeq	r1, r0, r0
  1c:	00021820 	andeq	r1, r2, r0, lsr #16
  20:	00000000 	andeq	r0, r0, r0
  24:	000d0200 	andeq	r0, sp, r0, lsl #4
  28:	42010000 	andmi	r0, r1, #0
  2c:	00006d0f 	andeq	r6, r0, pc, lsl #26
  30:	0001c000 	andeq	ip, r1, r0
  34:	00006820 	andeq	r6, r0, r0, lsr #16
  38:	6d9c0100 	ldfvss	f0, [ip]
  3c:	03000000 	movweq	r0, #0
  40:	00776f72 	rsbseq	r6, r7, r2, ror pc
  44:	74064301 	strvc	r4, [r6], #-769	; 0xfffffcff
  48:	02000000 	andeq	r0, r0, #0
  4c:	d0046c91 	mulle	r4, r1, ip
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	00740b43 	rsbseq	r0, r4, r3, asr #22
  58:	91020000 	mrsls	r0, (UNDEF: 2)
  5c:	656b0368 	strbvs	r0, [fp, #-872]!	; 0xfffffc98
  60:	44010079 	strmi	r0, [r1], #-121	; 0xffffff87
  64:	00007b10 	andeq	r7, r0, r0, lsl fp
  68:	58910200 	ldmpl	r1, {r9}
  6c:	08010500 	stmdaeq	r1, {r8, sl}
  70:	000000f7 	strdeq	r0, [r0], -r7
  74:	69050406 	stmdbvs	r5, {r1, r2, sl}
  78:	0700746e 	streq	r7, [r0, -lr, ror #8]
  7c:	0000006d 	andeq	r0, r0, sp, rrx
  80:	0000008b 	andeq	r0, r0, fp, lsl #1
  84:	00008b08 	andeq	r8, r0, r8, lsl #22
  88:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
  8c:	00000704 	andeq	r0, r0, r4, lsl #14
  90:	df090000 	svcle	0x00090000
  94:	01000000 	mrseq	r0, (UNDEF: 0)
  98:	00740539 	rsbseq	r0, r4, r9, lsr r5
  9c:	016c0000 	cmneq	ip, r0
  a0:	00542000 	subseq	r2, r4, r0
  a4:	9c010000 	stcls	0, cr0, [r1], {-0}
  a8:	000000ba 	strheq	r0, [r0], -sl
  ac:	01006303 	tsteq	r0, r3, lsl #6
  b0:	006d103a 	rsbeq	r1, sp, sl, lsr r0
  b4:	91020000 	mrsls	r0, (UNDEF: 2)
  b8:	ea0a0077 	b	28029c <startup-0x1fd7fd64>
  bc:	01000000 	mrseq	r0, (UNDEF: 0)
  c0:	0118062f 	tsteq	r8, pc, lsr #12
  c4:	00542000 	subseq	r2, r4, r0
  c8:	9c010000 	stcls	0, cr0, [r1], {-0}
  cc:	000000e0 	andeq	r0, r0, r0, ror #1
  d0:	776f720b 	strbvc	r7, [pc, -fp, lsl #4]!
  d4:	202f0100 	eorcs	r0, pc, r0, lsl #2
  d8:	0000008b 	andeq	r0, r0, fp, lsl #1
  dc:	00749102 	rsbseq	r9, r4, r2, lsl #2
  e0:	0000d70a 	andeq	sp, r0, sl, lsl #14
  e4:	06180100 	ldreq	r0, [r8], -r0, lsl #2
  e8:	20000060 	andcs	r0, r0, r0, rrx
  ec:	000000b8 	strheq	r0, [r0], -r8
  f0:	01049c01 	tsteq	r4, r1, lsl #24
  f4:	630b0000 	movwvs	r0, #45056	; 0xb000
  f8:	1d180100 	ldfnes	f0, [r8, #-0]
  fc:	0000006d 	andeq	r0, r0, sp, rrx
 100:	00779102 	rsbseq	r9, r7, r2, lsl #2
 104:	0001050c 	andeq	r0, r1, ip, lsl #10
 108:	06090100 	streq	r0, [r9], -r0, lsl #2
 10c:	20000010 	andcs	r0, r0, r0, lsl r0
 110:	00000050 	andeq	r0, r0, r0, asr r0
 114:	a2009c01 	andge	r9, r0, #256	; 0x100
 118:	04000000 	streq	r0, [r0], #-0
 11c:	0000e100 	andeq	lr, r0, r0, lsl #2
 120:	54010400 	strpl	r0, [r1], #-1024	; 0xfffffc00
 124:	0c000000 	stceq	0, cr0, [r0], {-0}
 128:	0000011b 	andeq	r0, r0, fp, lsl r1
 12c:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 138:	000001c2 	andeq	r0, r0, r2, asr #3
 13c:	00011602 	andeq	r1, r1, r2, lsl #12
 140:	060d0100 	streq	r0, [sp], -r0, lsl #2
 144:	20000228 	andcs	r0, r0, r8, lsr #4
 148:	00000020 	andeq	r0, r0, r0, lsr #32
 14c:	00859c01 	addeq	r9, r5, r1, lsl #24
 150:	05030000 	streq	r0, [r3, #-0]
 154:	01000001 	tsteq	r0, r1
 158:	0085020f 	addeq	r0, r5, pc, lsl #4
 15c:	004d0000 	subeq	r0, sp, r0
 160:	00040000 	andeq	r0, r4, r0
 164:	00023205 	andeq	r3, r2, r5, lsl #4
 168:	00001420 	andeq	r1, r0, r0, lsr #8
 16c:	00630600 	rsbeq	r0, r3, r0, lsl #12
 170:	8c081201 	sfmhi	f1, 4, [r8], {1}
 174:	02000000 	andeq	r0, r0, #0
 178:	0d037791 	stceq	7, cr7, [r3, #-580]	; 0xfffffdbc
 17c:	01000000 	mrseq	r0, (UNDEF: 0)
 180:	00850c12 	addeq	r0, r5, r2, lsl ip
 184:	00750000 	rsbseq	r0, r5, r0
 188:	00040000 	andeq	r0, r4, r0
 18c:	0000d707 	andeq	sp, r0, r7, lsl #14
 190:	03130100 	tsteq	r3, #0, 2
 194:	00000085 	andeq	r0, r0, r5, lsl #1
 198:	00000004 	andeq	r0, r0, r4
 19c:	69050408 	stmdbvs	r5, {r3, sl}
 1a0:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 1a4:	01000801 	tsteq	r0, r1, lsl #16
 1a8:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
 1ac:	01000001 	tsteq	r0, r1
 1b0:	00000603 	andeq	r0, r0, r3, lsl #12
 1b4:	000c2000 	andeq	r2, ip, r0
 1b8:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	13491927 	movtne	r1, #39207	; 0x9927
  24:	06120111 			; <UNDEFINED> instruction: 0x06120111
  28:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  2c:	00130119 	andseq	r0, r3, r9, lsl r1
  30:	00340300 	eorseq	r0, r4, r0, lsl #6
  34:	0b3a0803 	bleq	e82048 <startup-0x1f17dfb8>
  38:	0b390b3b 	bleq	e42d2c <startup-0x1f1bd2d4>
  3c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  40:	34040000 	strcc	r0, [r4], #-0
  44:	3a0e0300 	bcc	380c4c <startup-0x1fc7f3b4>
  48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  4c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  50:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
  54:	0b0b0024 	bleq	2c00ec <startup-0x1fd3ff14>
  58:	0e030b3e 	vmoveq.16	d3[0], r0
  5c:	24060000 	strcs	r0, [r6], #-0
  60:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  64:	0008030b 	andeq	r0, r8, fp, lsl #6
  68:	01010700 	tsteq	r1, r0, lsl #14
  6c:	13011349 	movwne	r1, #4937	; 0x1349
  70:	21080000 	mrscs	r0, (UNDEF: 8)
  74:	2f134900 	svccs	0x00134900
  78:	0900000b 	stmdbeq	r0, {r0, r1, r3}
  7c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  80:	0b3a0e03 	bleq	e83894 <startup-0x1f17c76c>
  84:	0b390b3b 	bleq	e42d78 <startup-0x1f1bd288>
  88:	13491927 	movtne	r1, #39207	; 0x9927
  8c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  90:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  94:	00130119 	andseq	r0, r3, r9, lsl r1
  98:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  9c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  a0:	0b3b0b3a 	bleq	ec2d90 <startup-0x1f13d270>
  a4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  a8:	06120111 			; <UNDEFINED> instruction: 0x06120111
  ac:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  b0:	00130119 	andseq	r0, r3, r9, lsl r1
  b4:	00050b00 	andeq	r0, r5, r0, lsl #22
  b8:	0b3a0803 	bleq	e820cc <startup-0x1f17df34>
  bc:	0b390b3b 	bleq	e42db0 <startup-0x1f1bd250>
  c0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  c4:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
  c8:	03193f00 	tsteq	r9, #0, 30
  cc:	3b0b3a0e 	blcc	2ce90c <startup-0x1fd316f4>
  d0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  d4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  d8:	97184006 	ldrls	r4, [r8, -r6]
  dc:	00001942 	andeq	r1, r0, r2, asr #18
  e0:	01110100 	tsteq	r1, r0, lsl #2
  e4:	0b130e25 	bleq	4c3980 <startup-0x1fb3c680>
  e8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
  ec:	01111755 	tsteq	r1, r5, asr r7
  f0:	00001710 	andeq	r1, r0, r0, lsl r7
  f4:	3f012e02 	svccc	0x00012e02
  f8:	3a0e0319 	bcc	380d64 <startup-0x1fc7f29c>
  fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 100:	1119270b 	tstne	r9, fp, lsl #14
 104:	40061201 	andmi	r1, r6, r1, lsl #4
 108:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 10c:	00001301 	andeq	r1, r0, r1, lsl #6
 110:	3f012e03 	svccc	0x00012e03
 114:	3a0e0319 	bcc	380d80 <startup-0x1fc7f280>
 118:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 11c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 120:	00130119 	andseq	r0, r3, r9, lsl r1
 124:	00180400 	andseq	r0, r8, r0, lsl #8
 128:	0b050000 	bleq	140130 <startup-0x1febfed0>
 12c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 130:	06000006 	streq	r0, [r0], -r6
 134:	08030034 	stmdaeq	r3, {r2, r4, r5}
 138:	0b3b0b3a 	bleq	ec2e28 <startup-0x1f13d1d8>
 13c:	13490b39 	movtne	r0, #39737	; 0x9b39
 140:	00001802 	andeq	r1, r0, r2, lsl #16
 144:	3f012e07 	svccc	0x00012e07
 148:	3a0e0319 	bcc	380db4 <startup-0x1fc7f24c>
 14c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 150:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 154:	08000019 	stmdaeq	r0, {r0, r3, r4}
 158:	0b0b0024 	bleq	2c01f0 <startup-0x1fd3fe10>
 15c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 160:	24090000 	strcs	r0, [r9], #-0
 164:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 168:	000e030b 	andeq	r0, lr, fp, lsl #6
 16c:	002e0a00 	eoreq	r0, lr, r0, lsl #20
 170:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 174:	0b3b0b3a 	bleq	ec2e64 <startup-0x1f13d19c>
 178:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 17c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 180:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 184:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000218 	andeq	r0, r0, r8, lsl r2
	...
  20:	00000024 	andeq	r0, r0, r4, lsr #32
  24:	01170002 	tsteq	r7, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000228 	andcs	r0, r0, r8, lsr #4
  34:	00000020 	andeq	r0, r0, r0, lsr #32
  38:	20000000 	andcs	r0, r0, r0
  3c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000001be 			; <UNDEFINED> instruction: 0x000001be
   4:	003c0003 	eorseq	r0, ip, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	5a010000 	bpl	40020 <startup-0x1ffbffe0>
  1c:	41442f3a 	cmpmi	r4, sl, lsr pc
  20:	62616c54 	rsbvs	r6, r1, #84, 24	; 0x5400
  24:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  28:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  2c:	61622f72 	smcvs	8946	; 0x22f2
  30:	5f636973 	svcpl	0x00636973
  34:	00006f69 	andeq	r6, r0, r9, ror #30
  38:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  3c:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  40:	00010063 	andeq	r0, r1, r3, rrx
  44:	01050000 	mrseq	r0, (UNDEF: 5)
  48:	10020500 	andne	r0, r2, r0, lsl #10
  4c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  50:	02050109 	andeq	r0, r5, #1073741826	; 0x40000002
  54:	20220530 	eorcs	r0, r2, r0, lsr r5
  58:	59320f05 	ldmdbpl	r2!, {r0, r2, r8, r9, sl, fp}
  5c:	05681005 	strbeq	r1, [r8, #-5]!
  60:	01054c0f 	tsteq	r5, pc, lsl #24
  64:	ca1f0575 	bgt	7c1640 <startup-0x1f83e9c0>
  68:	05670205 	strbeq	r0, [r7, #-517]!	; 0xfffffdfb
  6c:	1a05910b 	bne	1644a0 <startup-0x1fe9bb60>
  70:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  74:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
  78:	0305201a 	movweq	r2, #20506	; 0x501a
  7c:	210b052e 	tstcs	fp, lr, lsr #10
  80:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
  84:	0b052e03 	bleq	14b898 <startup-0x1feb4768>
  88:	201a0521 	andscs	r0, sl, r1, lsr #10
  8c:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
  90:	1a05210b 	bne	1484c4 <startup-0x1feb7b3c>
  94:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  98:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
  9c:	0305201a 	movweq	r2, #20506	; 0x501a
  a0:	210b052e 	tstcs	fp, lr, lsr #10
  a4:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
  a8:	0b052e03 	bleq	14b8bc <startup-0x1feb4744>
  ac:	201a0521 	andscs	r0, sl, r1, lsr #10
  b0:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
  b4:	1a05210b 	bne	1484e8 <startup-0x1feb7b18>
  b8:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  bc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
  c0:	0305201a 	movweq	r2, #20506	; 0x501a
  c4:	210d052e 	tstcs	sp, lr, lsr #10
  c8:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
  cc:	0d052e03 	stceq	14, cr2, [r5, #-12]
  d0:	201c0521 	andscs	r0, ip, r1, lsr #10
  d4:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
  d8:	1c05210d 	stfnes	f2, [r5], {13}
  dc:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  e0:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
  e4:	0305201c 	movweq	r2, #20508	; 0x501c
  e8:	210d052e 	tstcs	sp, lr, lsr #10
  ec:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
  f0:	0d052e03 	stceq	14, cr2, [r5, #-12]
  f4:	201c0521 	andscs	r0, ip, r1, lsr #10
  f8:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
  fc:	1b05220c 	blne	148934 <startup-0x1feb76cc>
 100:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
 104:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
 108:	0b059224 	bleq	1649a0 <startup-0x1fe9b660>
 10c:	201b05ca 	andscs	r0, fp, sl, asr #11
 110:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
 114:	1b05210b 	blne	148548 <startup-0x1feb7ab8>
 118:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
 11c:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
 120:	0305201b 	movweq	r2, #20507	; 0x501b
 124:	210b052e 	tstcs	fp, lr, lsr #10
 128:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
 12c:	0b052e03 	bleq	14b940 <startup-0x1feb46c0>
 130:	201b0521 	andscs	r0, fp, r1, lsr #10
 134:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
 138:	15052201 	strne	r2, [r5, #-513]	; 0xfffffdff
 13c:	3d140592 	cfldr32cc	mvfx0, [r4, #-584]	; 0xfffffdb8
 140:	05201005 	streq	r1, [r0, #-5]!
 144:	04053d07 	streq	r3, [r5], #-3335	; 0xfffff2f9
 148:	0015054a 	andseq	r0, r5, sl, asr #10
 14c:	20010402 	andcs	r0, r1, r2, lsl #8
 150:	052f0705 	streq	r0, [pc, #-1797]!	; fffffa53 <main+0xdffff82b>
 154:	15054a04 	strne	r4, [r5, #-2564]	; 0xfffff5fc
 158:	01040200 	mrseq	r0, R12_usr
 15c:	2f070520 	svccs	0x00070520
 160:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
 164:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
 168:	07052001 	streq	r2, [r5, -r1]
 16c:	4a04052f 	bmi	101630 <startup-0x1fefe9d0>
 170:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
 174:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 178:	01052f09 	tsteq	r5, r9, lsl #30
 17c:	68190521 	ldmdavs	r9, {r0, r5, r8, sl}
 180:	053e1005 	ldreq	r1, [lr, #-5]!
 184:	0205670a 	andeq	r6, r5, #2621440	; 0x280000
 188:	2103052e 	tstcs	r3, lr, lsr #10
 18c:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
 190:	04054a05 	streq	r4, [r5], #-2565	; 0xfffff5fb
 194:	3d15053e 	cfldr32cc	mvfx0, [r5, #-248]	; 0xffffff08
 198:	052e1005 	streq	r1, [lr, #-5]!
 19c:	19052022 	stmdbne	r5, {r1, r5, sp}
 1a0:	200e052e 	andcs	r0, lr, lr, lsr #10
 1a4:	02001b05 	andeq	r1, r0, #5120	; 0x1400
 1a8:	05370204 	ldreq	r0, [r7, #-516]!	; 0xfffffdfc
 1ac:	04020002 	streq	r0, [r2], #-2
 1b0:	05443c01 	strbeq	r3, [r4, #-3073]	; 0xfffff3ff
 1b4:	01053d09 	tsteq	r5, r9, lsl #26
 1b8:	01040200 	mrseq	r0, R12_usr
 1bc:	00070221 	andeq	r0, r7, r1, lsr #4
 1c0:	00800101 	addeq	r0, r0, r1, lsl #2
 1c4:	00030000 	andeq	r0, r3, r0
 1c8:	00000039 	andeq	r0, r0, r9, lsr r0
 1cc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 1d0:	0101000d 	tsteq	r1, sp
 1d4:	00000101 	andeq	r0, r0, r1, lsl #2
 1d8:	00000100 	andeq	r0, r0, r0, lsl #2
 1dc:	2f3a5a01 	svccs	0x003a5a01
 1e0:	6c544144 	ldfvse	f4, [r4], {68}	; 0x44
 1e4:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 1e8:	6f697461 	svcvs	0x00697461
 1ec:	2f72656e 	svccs	0x0072656e
 1f0:	69736162 	ldmdbvs	r3!, {r1, r5, r6, r8, sp, lr}^
 1f4:	6f695f63 	svcvs	0x00695f63
 1f8:	616d0000 	cmnvs	sp, r0
 1fc:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
 200:	00000100 	andeq	r0, r0, r0, lsl #2
 204:	00010500 	andeq	r0, r1, r0, lsl #10
 208:	00000205 	andeq	r0, r0, r5, lsl #4
 20c:	13152000 	tstne	r5, #0
 210:	0003025e 	andeq	r0, r3, lr, asr r2
 214:	01050101 	tsteq	r5, r1, lsl #2
 218:	28020500 	stmdacs	r2, {r8, sl}
 21c:	03200002 			; <UNDEFINED> instruction: 0x03200002
 220:	0205010d 	andeq	r0, r5, #1073741827	; 0x40000003
 224:	000c053d 	andeq	r0, ip, sp, lsr r5
 228:	31010402 	tstcc	r1, r2, lsl #8
 22c:	02000805 	andeq	r0, r0, #327680	; 0x50000
 230:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 234:	04020003 	streq	r0, [r2], #-3
 238:	02052f01 	andeq	r2, r5, #1, 30
 23c:	01040200 	mrseq	r0, R12_usr
 240:	00010256 	andeq	r0, r1, r6, asr r2
 244:	Address 0x00000244 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  10:	3a5a0062 	bcc	16801a0 <startup-0x1e97fe60>
  14:	5441445c 	strbpl	r4, [r1], #-1116	; 0xfffffba4
  18:	6f62616c 	svcvs	0x0062616c
  1c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
  20:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
  24:	7361625c 	cmnvc	r1, #92, 4	; 0xc0000005
  28:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
  2c:	3a5a006f 	bcc	16801f0 <startup-0x1e97fe10>
  30:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
  34:	6f62616c 	svcvs	0x0062616c
  38:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
  3c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
  40:	7361622f 	cmnvc	r1, #-268435454	; 0xf0000002
  44:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
  48:	74732f6f 	ldrbtvc	r2, [r3], #-3951	; 0xfffff091
  4c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  50:	00632e70 	rsbeq	r2, r3, r0, ror lr
  54:	20554e47 	subscs	r4, r5, r7, asr #28
  58:	20393943 	eorscs	r3, r9, r3, asr #18
  5c:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
  60:	30322031 	eorscc	r2, r2, r1, lsr r0
  64:	30313931 	eorscc	r3, r1, r1, lsr r9
  68:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  6c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  70:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  74:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  78:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  7c:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  80:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  84:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  88:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  8c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  90:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  94:	205d3939 	subscs	r3, sp, r9, lsr r9
  98:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  9c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  a0:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  a4:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  a8:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  ac:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  b0:	616d2d20 	cmnvs	sp, r0, lsr #26
  b4:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  b8:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  bc:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  c0:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  c4:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  c8:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  cc:	00393963 	eorseq	r3, r9, r3, ror #18
  d0:	756c6f63 	strbvc	r6, [ip, #-3939]!	; 0xfffff09d
  d4:	6f006e6d 	svcvs	0x00006e6d
  d8:	73377475 	teqvc	r7, #1962934272	; 0x75000000
  dc:	6b006765 	blvs	19e78 <startup-0x1ffe6188>
  e0:	47627965 	strbmi	r7, [r2, -r5, ror #18]!
  e4:	6f437465 	svcvs	0x00437465
  e8:	656b006c 	strbvs	r0, [fp, #-108]!	; 0xffffff94
  ec:	63416279 	movtvs	r6, #4729	; 0x1279
  f0:	61766974 	cmnvs	r6, r4, ror r9
  f4:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
  f8:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  fc:	2064656e 	rsbcs	r6, r4, lr, ror #10
 100:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 104:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 108:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 10c:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
 110:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 114:	616d0070 	smcvs	53248	; 0xd000
 118:	5a006e69 	bpl	1bac4 <startup-0x1ffe453c>
 11c:	41442f3a 	cmpmi	r4, sl, lsr pc
 120:	62616c54 	rsbvs	r6, r1, #84, 24	; 0x5400
 124:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 128:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 12c:	61622f72 	smcvs	8946	; 0x22f2
 130:	5f636973 	svcpl	0x00636973
 134:	6d2f6f69 	stcvs	15, cr6, [pc, #-420]!	; ffffff98 <main+0xdffffd70>
 138:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
 13c:	Address 0x0000013c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000018 	andeq	r0, r0, r8, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000050 	andeq	r0, r0, r0, asr r0
  20:	40080e41 	andmi	r0, r8, r1, asr #28
  24:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  28:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  2c:	0000001c 	andeq	r0, r0, ip, lsl r0
  30:	00000000 	andeq	r0, r0, r0
  34:	20000060 	andcs	r0, r0, r0, rrx
  38:	000000b8 	strheq	r0, [r0], -r8
  3c:	40080e41 	andmi	r0, r8, r1, asr #28
  40:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  44:	100e4101 	andne	r4, lr, r1, lsl #2
  48:	00070d41 	andeq	r0, r7, r1, asr #26
  4c:	0000001c 	andeq	r0, r0, ip, lsl r0
  50:	00000000 	andeq	r0, r0, r0
  54:	20000118 	andcs	r0, r0, r8, lsl r1
  58:	00000054 	andeq	r0, r0, r4, asr r0
  5c:	40080e41 	andmi	r0, r8, r1, asr #28
  60:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  64:	100e4101 	andne	r4, lr, r1, lsl #2
  68:	00070d41 	andeq	r0, r7, r1, asr #26
  6c:	0000001c 	andeq	r0, r0, ip, lsl r0
  70:	00000000 	andeq	r0, r0, r0
  74:	2000016c 	andcs	r0, r0, ip, ror #2
  78:	00000054 	andeq	r0, r0, r4, asr r0
  7c:	40080e41 	andmi	r0, r8, r1, asr #28
  80:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  84:	100e4101 	andne	r4, lr, r1, lsl #2
  88:	00070d41 	andeq	r0, r7, r1, asr #26
  8c:	00000020 	andeq	r0, r0, r0, lsr #32
  90:	00000000 	andeq	r0, r0, r0
  94:	200001c0 	andcs	r0, r0, r0, asr #3
  98:	00000068 	andeq	r0, r0, r8, rrx
  9c:	400c0e41 	andmi	r0, ip, r1, asr #28
  a0:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  a4:	018e4002 	orreq	r4, lr, r2
  a8:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  ac:	0000070d 	andeq	r0, r0, sp, lsl #14
  b0:	0000000c 	andeq	r0, r0, ip
  b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  b8:	7c020001 	stcvc	0, cr0, [r2], {1}
  bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  c0:	0000000c 	andeq	r0, r0, ip
  c4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
  c8:	20000000 	andcs	r0, r0, r0
  cc:	0000000c 	andeq	r0, r0, ip
  d0:	0000001c 	andeq	r0, r0, ip, lsl r0
  d4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
  d8:	20000228 	andcs	r0, r0, r8, lsr #4
  dc:	00000020 	andeq	r0, r0, r0, lsr #32
  e0:	40080e41 	andmi	r0, r8, r1, asr #28
  e4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e8:	100e4101 	andne	r4, lr, r1, lsl #2
  ec:	00070d41 	andeq	r0, r7, r1, asr #26

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000228 	andcs	r0, r0, r8, lsr #4
   4:	20000248 	andcs	r0, r0, r8, asr #4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
